{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/pym.js/dist/pym.v1.js","../../src/config.js","../../node_modules/d3-dsv/src/dsv.js","../../node_modules/d3-dsv/src/csv.js","../../node_modules/d3-dsv/src/autoType.js","../../src/Select.svelte","../../src/Toggle.svelte","../../src/App.svelte","../../src/utils.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*! pym.js - v1.3.2 - 2018-02-13 */\n/*\n* Pym.js is library that resizes an iframe based on the width of the parent and the resulting height of the child.\n* Check out the docs at http://blog.apps.npr.org/pym.js/ or the readme at README.md for usage.\n*/\n\n/** @module pym */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    }\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        window.pym = factory.call(this);\n    }\n})(function() {\n    var MESSAGE_DELIMITER = 'xPYMx';\n\n    var lib = {};\n\n    /**\n    * Create and dispatch a custom pym event\n    *\n    * @method _raiseCustomEvent\n    * @inner\n    *\n    * @param {String} eventName\n    */\n   var _raiseCustomEvent = function(eventName) {\n     var event = document.createEvent('Event');\n     event.initEvent('pym:' + eventName, true, true);\n     document.dispatchEvent(event);\n   };\n\n    /**\n    * Generic function for parsing URL params.\n    * Via http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n    *\n    * @method _getParameterByName\n    * @inner\n    *\n    * @param {String} name The name of the paramter to get from the URL.\n    */\n    var _getParameterByName = function(name) {\n        var regex = new RegExp(\"[\\\\?&]\" + name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]') + '=([^&#]*)');\n        var results = regex.exec(location.search);\n\n        if (results === null) {\n            return '';\n        }\n\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n\n    /**\n     * Check the message to make sure it comes from an acceptable xdomain.\n     * Defaults to '*' but can be overriden in config.\n     *\n     * @method _isSafeMessage\n     * @inner\n     *\n     * @param {Event} e The message event.\n     * @param {Object} settings Configuration.\n     */\n    var _isSafeMessage = function(e, settings) {\n        if (settings.xdomain !== '*') {\n            // If origin doesn't match our xdomain, return.\n            if (!e.origin.match(new RegExp(settings.xdomain + '$'))) { return; }\n        }\n\n        // Ignore events that do not carry string data #151\n        if (typeof e.data !== 'string') { return; }\n\n        return true;\n    };\n\n    var _isSafeUrl = function(url) {\n        // Adapted from angular 2 url sanitizer\n        var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/gi;\n        if (!url.match(SAFE_URL_PATTERN)) { return; }\n        \n        return true;\n    };\n\n    /**\n     * Construct a message to send between frames.\n     *\n     * NB: We use string-building here because JSON message passing is\n     * not supported in all browsers.\n     *\n     * @method _makeMessage\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     * @param {String} messageType The type of message to send.\n     * @param {String} message The message to send.\n     */\n    var _makeMessage = function(id, messageType, message) {\n        var bits = ['pym', id, messageType, message];\n\n        return bits.join(MESSAGE_DELIMITER);\n    };\n\n    /**\n     * Construct a regex to validate and parse messages.\n     *\n     * @method _makeMessageRegex\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     */\n    var _makeMessageRegex = function(id) {\n        var bits = ['pym', id, '(\\\\S+)', '(.*)'];\n\n        return new RegExp('^' + bits.join(MESSAGE_DELIMITER) + '$');\n    };\n\n    /**\n    * Underscore implementation of getNow\n    *\n    * @method _getNow\n    * @inner\n    *\n    */\n    var _getNow = Date.now || function() {\n        return new Date().getTime();\n    };\n\n    /**\n    * Underscore implementation of throttle\n    *\n    * @method _throttle\n    * @inner\n    *\n    * @param {function} func Throttled function\n    * @param {number} wait Throttle wait time\n    * @param {object} options Throttle settings\n    */\n\n    var _throttle = function(func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        if (!options) {options = {};}\n        var later = function() {\n            previous = options.leading === false ? 0 : _getNow();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) {context = args = null;}\n        };\n        return function() {\n            var now = _getNow();\n            if (!previous && options.leading === false) {previous = now;}\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) {context = args = null;}\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    };\n\n    /**\n     * Clean autoInit Instances: those that point to contentless iframes\n     * @method _cleanAutoInitInstances\n     * @inner\n     */\n    var _cleanAutoInitInstances = function() {\n        var length = lib.autoInitInstances.length;\n\n        // Loop backwards to avoid index issues\n        for (var idx = length - 1; idx >= 0; idx--) {\n            var instance = lib.autoInitInstances[idx];\n            // If instance has been removed or is contentless then remove it\n            if (instance.el.getElementsByTagName('iframe').length &&\n                instance.el.getElementsByTagName('iframe')[0].contentWindow) {\n                continue;\n            }\n            else {\n                // Remove the reference to the removed or orphan instance\n                lib.autoInitInstances.splice(idx,1);\n            }\n        }\n    };\n\n    /**\n     * Store auto initialized Pym instances for further reference\n     * @name module:pym#autoInitInstances\n     * @type Array\n     * @default []\n     */\n    lib.autoInitInstances = [];\n\n    /**\n     * Initialize Pym for elements on page that have data-pym attributes.\n     * Expose autoinit in case we need to call it from the outside\n     * @instance\n     * @method autoInit\n     * @param {Boolean} doNotRaiseEvents flag to avoid sending custom events\n     */\n    lib.autoInit = function(doNotRaiseEvents) {\n        var elements = document.querySelectorAll('[data-pym-src]:not([data-pym-auto-initialized])');\n        var length = elements.length;\n\n        // Clean stored instances in case needed\n        _cleanAutoInitInstances();\n        for (var idx = 0; idx < length; ++idx) {\n            var element = elements[idx];\n            /*\n            * Mark automatically-initialized elements so they are not\n            * re-initialized if the user includes pym.js more than once in the\n            * same document.\n            */\n            element.setAttribute('data-pym-auto-initialized', '');\n\n            // Ensure elements have an id\n            if (element.id === '') {\n                element.id = 'pym-' + idx + \"-\" + Math.random().toString(36).substr(2,5);\n            }\n\n            var src = element.getAttribute('data-pym-src');\n\n            // List of data attributes to configure the component\n            // structure: {'attribute name': 'type'}\n            var settings = {'xdomain': 'string', 'title': 'string', 'name': 'string', 'id': 'string',\n                            'sandbox': 'string', 'allowfullscreen': 'boolean',\n                            'parenturlparam': 'string', 'parenturlvalue': 'string',\n                            'optionalparams': 'boolean', 'trackscroll': 'boolean',\n                            'scrollwait': 'number'};\n\n            var config = {};\n\n            for (var attribute in settings) {\n                // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute#Notes\n               if (element.getAttribute('data-pym-'+attribute) !== null) {\n                  switch (settings[attribute]) {\n                    case 'boolean':\n                       config[attribute] = !(element.getAttribute('data-pym-'+attribute) === 'false'); // jshint ignore:line\n                       break;\n                    case 'string':\n                       config[attribute] = element.getAttribute('data-pym-'+attribute);\n                       break;\n                    case 'number':\n                        var n = Number(element.getAttribute('data-pym-'+attribute));\n                        if (!isNaN(n)) {\n                            config[attribute] = n;\n                        }\n                        break;\n                    default:\n                       console.err('unrecognized attribute type');\n                  }\n               }\n            }\n\n            // Store references to autoinitialized pym instances\n            var parent = new lib.Parent(element.id, src, config);\n            lib.autoInitInstances.push(parent);\n        }\n\n        // Fire customEvent\n        if (!doNotRaiseEvents) {\n            _raiseCustomEvent(\"pym-initialized\");\n        }\n        // Return stored autoinitalized pym instances\n        return lib.autoInitInstances;\n    };\n\n    /**\n     * The Parent half of a response iframe.\n     *\n     * @memberof module:pym\n     * @class Parent\n     * @param {String} id The id of the div into which the iframe will be rendered. sets {@link module:pym.Parent~id}\n     * @param {String} url The url of the iframe source. sets {@link module:pym.Parent~url}\n     * @param {Object} [config] Configuration for the parent instance. sets {@link module:pym.Parent~settings}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {string} [config.title] - if passed it will be assigned to the iframe title attribute\n     * @param {string} [config.name] - if passed it will be assigned to the iframe name attribute\n     * @param {string} [config.id] - if passed it will be assigned to the iframe id attribute\n     * @param {boolean} [config.allowfullscreen] - if passed and different than false it will be assigned to the iframe allowfullscreen attribute\n     * @param {string} [config.sandbox] - if passed it will be assigned to the iframe sandbox attribute (we do not validate the syntax so be careful!!)\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name passed to the iframe src\n     * @param {string} [config.parenturlvalue] - if passed it will be override the default parentUrl query string parameter value passed to the iframe src\n     * @param {string} [config.optionalparams] - if passed and different than false it will strip the querystring params parentUrl and parentTitle passed to the iframe src\n     * @param {boolean} [config.trackscroll] - if passed it will activate scroll tracking on the parent\n     * @param {number} [config.scrollwait] - if passed it will set the throttle wait in order to fire scroll messaging. Defaults to 100 ms.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe iFrame}\n     */\n    lib.Parent = function(id, url, config) {\n        /**\n         * The id of the container element\n         *\n         * @memberof module:pym.Parent\n         * @member {string} id\n         * @inner\n         */\n        this.id = id;\n        /**\n         * The url that will be set as the iframe's src\n         *\n         * @memberof module:pym.Parent\n         * @member {String} url\n         * @inner\n         */\n        this.url = url;\n\n        /**\n         * The container DOM object\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} el\n         * @inner\n         */\n        this.el = document.getElementById(id);\n        /**\n         * The contained child iframe\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} iframe\n         * @inner\n         * @default null\n         */\n        this.iframe = null;\n        /**\n         * The parent instance settings, updated by the values passed in the config object\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} settings\n         * @inner\n         */\n        this.settings = {\n            xdomain: '*',\n            optionalparams: true,\n            parenturlparam: 'parentUrl',\n            parenturlvalue: window.location.href,\n            trackscroll: false,\n            scrollwait: 100,\n        };\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Parent\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = _makeMessageRegex(this.id);\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // ensure a config object\n        config = (config || {});\n\n        /**\n         * Construct the iframe.\n         *\n         * @memberof module:pym.Parent\n         * @method _constructIframe\n         * @inner\n         */\n        this._constructIframe = function() {\n            // Calculate the width of this element.\n            var width = this.el.offsetWidth.toString();\n\n            // Create an iframe element attached to the document.\n            this.iframe = document.createElement('iframe');\n\n            // Save fragment id\n            var hash = '';\n            var hashIndex = this.url.indexOf('#');\n\n            if (hashIndex > -1) {\n                hash = this.url.substring(hashIndex, this.url.length);\n                this.url = this.url.substring(0, hashIndex);\n            }\n\n            // If the URL contains querystring bits, use them.\n            // Otherwise, just create a set of valid params.\n            if (this.url.indexOf('?') < 0) {\n                this.url += '?';\n            } else {\n                this.url += '&';\n            }\n\n            // Append the initial width as a querystring parameter\n            // and optional params if configured to do so\n            this.iframe.src = this.url + 'initialWidth=' + width +\n                                         '&childId=' + this.id;\n\n            if (this.settings.optionalparams) {\n                this.iframe.src += '&parentTitle=' + encodeURIComponent(document.title);\n                this.iframe.src += '&'+ this.settings.parenturlparam + '=' + encodeURIComponent(this.settings.parenturlvalue);\n            }\n            this.iframe.src +=hash;\n\n            // Set some attributes to this proto-iframe.\n            this.iframe.setAttribute('width', '100%');\n            this.iframe.setAttribute('scrolling', 'no');\n            this.iframe.setAttribute('marginheight', '0');\n            this.iframe.setAttribute('frameborder', '0');\n\n            if (this.settings.title) {\n                this.iframe.setAttribute('title', this.settings.title);\n            }\n\n            if (this.settings.allowfullscreen !== undefined && this.settings.allowfullscreen !== false) {\n                this.iframe.setAttribute('allowfullscreen','');\n            }\n\n            if (this.settings.sandbox !== undefined && typeof this.settings.sandbox === 'string') {\n                this.iframe.setAttribute('sandbox', this.settings.sandbox);\n            }\n\n            if (this.settings.id) {\n                if (!document.getElementById(this.settings.id)) {\n                    this.iframe.setAttribute('id', this.settings.id);\n                }\n            }\n\n            if (this.settings.name) {\n                this.iframe.setAttribute('name', this.settings.name);\n            }\n\n            // Replace the child content if needed\n            // (some CMSs might strip out empty elements)\n            while(this.el.firstChild) { this.el.removeChild(this.el.firstChild); }\n            // Append the iframe to our element.\n            this.el.appendChild(this.iframe);\n\n            // Add an event listener that will handle redrawing the child on resize.\n            window.addEventListener('resize', this._onResize);\n\n            // Add an event listener that will send the child the viewport.\n            if (this.settings.trackscroll) {\n                window.addEventListener('scroll', this._throttleOnScroll);\n            }\n        };\n\n        /**\n         * Send width on resize.\n         *\n         * @memberof module:pym.Parent\n         * @method _onResize\n         * @inner\n         */\n        this._onResize = function() {\n            this.sendWidth();\n            if (this.settings.trackscroll) {\n                this.sendViewportAndIFramePosition();\n            }\n        }.bind(this);\n\n        /**\n         * Send viewport and iframe info on scroll.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScroll\n         * @inner\n         */\n        this._onScroll = function() {\n            this.sendViewportAndIFramePosition();\n        }.bind(this);\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Parent\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Remove this parent from the page and unbind it's event handlers.\n         *\n         * @memberof module:pym.Parent\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            window.removeEventListener('resize', this._onResize);\n\n            this.el.removeChild(this.iframe);\n            // _cleanAutoInitInstances in case this parent was autoInitialized\n            _cleanAutoInitInstances();\n        };\n\n        /**\n         * Process a new message from the child.\n         *\n         * @memberof module:pym.Parent\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Grab the message from the child and parse it.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or too many matches in the message, punt.\n            if (!match || match.length !== 3) {\n                return false;\n            }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new height message from child.\n         *\n         * @memberof module:pym.Parent\n         * @method _onHeightMessage\n         * @inner\n         *\n         * @param {String} message The new height.\n         */\n        this._onHeightMessage = function(message) {\n            /*\n             * Handle parent height message from child.\n             */\n            var height = parseInt(message);\n\n            this.iframe.setAttribute('height', height + 'px');\n        };\n\n        /**\n         * Navigate parent to a new url.\n         *\n         * @memberof module:pym.Parent\n         * @method _onNavigateToMessage\n         * @inner\n         *\n         * @param {String} message The url to navigate to.\n         */\n        this._onNavigateToMessage = function(message) {\n            /*\n             * Handle parent scroll message from child.\n             */\n             if (!_isSafeUrl(message)) {return;}\n            document.location.href = message;\n        };\n\n        /**\n         * Scroll parent to a given child position.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScrollToChildPosMessage\n         * @inner\n         *\n         * @param {String} message The offset inside the child page.\n         */\n        this._onScrollToChildPosMessage = function(message) {\n            // Get the child container position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var iframePos = document.getElementById(this.id).getBoundingClientRect().top + window.pageYOffset;\n\n            var totalOffset = iframePos + parseInt(message);\n            window.scrollTo(0, totalOffset);\n        };\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"height\", \"scrollTo\" and \"navigateTo\".\n         *\n         * @memberof module:pym.Parent\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Parent~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Parent~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Send a message to the the child.\n         *\n         * @memberof module:pym.Parent\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            // When used alongside with pjax some references are lost\n            if (this.el.getElementsByTagName('iframe').length) {\n                if (this.el.getElementsByTagName('iframe')[0].contentWindow) {\n                    this.el.getElementsByTagName('iframe')[0].contentWindow\n                        .postMessage(_makeMessage(this.id, messageType, message), '*');\n                }\n                else {\n                    // Contentless child detected remove listeners and iframe\n                    this.remove();\n                }\n            }\n        };\n\n        /**\n         * Transmit the current iframe width to the child.\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendWidth\n         * @instance\n         */\n        this.sendWidth = function() {\n            var width = this.el.offsetWidth.toString();\n            this.sendMessage('width', width);\n        };\n\n        /**\n         * Transmit the current viewport and iframe position to the child.\n         * Sends viewport width, viewport height\n         * and iframe bounding rect top-left-bottom-right\n         * all separated by spaces\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendViewportAndIFramePosition\n         * @instance\n         */\n        this.sendViewportAndIFramePosition = function() {\n            var iframeRect = this.iframe.getBoundingClientRect();\n            var vWidth   = window.innerWidth || document.documentElement.clientWidth;\n            var vHeight  = window.innerHeight || document.documentElement.clientHeight;\n            var payload = vWidth + ' ' + vHeight;\n            payload += ' ' + iframeRect.top + ' ' + iframeRect.left;\n            payload += ' ' + iframeRect.bottom + ' ' + iframeRect.right;\n            this.sendMessage('viewport-iframe-position', payload);\n        };\n\n        // Add any overrides to settings coming from config.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        /**\n         * Throttled scroll function.\n         *\n         * @memberof module:pym.Parent\n         * @method _throttleOnScroll\n         * @inner\n         */\n        this._throttleOnScroll = _throttle(this._onScroll.bind(this), this.settings.scrollwait);\n\n        // Bind required message handlers\n        this.onMessage('height', this._onHeightMessage);\n        this.onMessage('navigateTo', this._onNavigateToMessage);\n        this.onMessage('scrollToChildPos', this._onScrollToChildPosMessage);\n        this.onMessage('parentPositionInfo', this.sendViewportAndIFramePosition);\n\n        // Add a listener for processing messages from the child.\n        window.addEventListener('message', this._processMessage, false);\n\n        // Construct the iframe in the container element.\n        this._constructIframe();\n\n        return this;\n    };\n\n    /**\n     * The Child half of a responsive iframe.\n     *\n     * @memberof module:pym\n     * @class Child\n     * @param {Object} [config] Configuration for the child instance. sets {@link module:pym.Child~settings}\n     * @param {function} [config.renderCallback=null] Callback invoked after receiving a resize event from the parent, sets {@link module:pym.Child#settings.renderCallback}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {number} [config.polling=0] - polling frequency in milliseconds to send height to parent\n     * @param {number} [config.id] - parent container id used when navigating the child iframe to a new page but we want to keep it responsive.\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name expected on the iframe src\n     */\n    lib.Child = function(config) {\n        /**\n         * The initial width of the parent page\n         *\n         * @memberof module:pym.Child\n         * @member {string} parentWidth\n         * @inner\n         */\n        this.parentWidth = null;\n        /**\n         * The id of the parent container\n         *\n         * @memberof module:pym.Child\n         * @member {String} id\n         * @inner\n         */\n        this.id = null;\n        /**\n         * The title of the parent page from document.title.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentTitle\n         * @inner\n         */\n        this.parentTitle = null;\n        /**\n         * The URL of the parent page from window.location.href.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentUrl\n         * @inner\n         */\n        this.parentUrl = null;\n        /**\n         * The settings for the child instance. Can be overriden by passing a config object to the child constructor\n         * i.e.: var pymChild = new pym.Child({renderCallback: render, xdomain: \"\\\\*\\.npr\\.org\"})\n         *\n         * @memberof module:pym.Child.settings\n         * @member {Object} settings - default settings for the child instance\n         * @inner\n         */\n        this.settings = {\n            renderCallback: null,\n            xdomain: '*',\n            polling: 0,\n            parenturlparam: 'parentUrl'\n        };\n\n        /**\n         * The timerId in order to be able to stop when polling is enabled\n         *\n         * @memberof module:pym.Child\n         * @member {String} timerId\n         * @inner\n         */\n        this.timerId = null;\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Child\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = null;\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Child\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // Ensure a config object\n        config = (config || {});\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"width\".\n         *\n         * @memberof module:pym.Child\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Child~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Child~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Child\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            /*\n             * Fire all event handlers for a given message type.\n             */\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Process a new message from the parent.\n         *\n         * @memberof module:pym.Child\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            /*\n            * Process a new message from parent frame.\n            */\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Get the message from the parent.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or it's a bad format, punt.\n            if (!match || match.length !== 3) { return; }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new width message from parent.\n         *\n         * @memberof module:pym.Child\n         * @method _onWidthMessage\n         * @inner\n         *\n         * @param {String} message The new width.\n         */\n        this._onWidthMessage = function(message) {\n            /*\n             * Handle width message from the child.\n             */\n            var width = parseInt(message);\n\n            // Change the width if it's different.\n            if (width !== this.parentWidth) {\n                this.parentWidth = width;\n\n                // Call the callback function if it exists.\n                if (this.settings.renderCallback) {\n                    this.settings.renderCallback(width);\n                }\n\n                // Send the height back to the parent.\n                this.sendHeight();\n            }\n        };\n\n        /**\n         * Send a message to the the Parent.\n         *\n         * @memberof module:pym.Child\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            /*\n             * Send a message to the parent.\n             */\n            window.parent.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe height to the parent.\n         *\n         * Call this directly in cases where you manually alter the height of the iframe contents.\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.sendHeight = function() {\n            // Get the child's height.\n            var height = document.getElementsByTagName('body')[0].offsetHeight.toString();\n\n            // Send the height to the parent.\n            this.sendMessage('height', height);\n\n            return height;\n        }.bind(this);\n\n        /**\n         * Ask parent to send the current viewport and iframe position information\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.getParentPositionInfo = function() {\n            // Send the height to the parent.\n            this.sendMessage('parentPositionInfo');\n        };\n\n        /**\n         * Scroll parent to a given element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentTo\n         * @instance\n         *\n         * @param {String} hash The id of the element to scroll to.\n         */\n        this.scrollParentTo = function(hash) {\n            this.sendMessage('navigateTo', '#' + hash);\n        };\n\n        /**\n         * Navigate parent to a given url.\n         *\n         * @memberof module:pym.Child\n         * @method navigateParentTo\n         * @instance\n         *\n         * @param {String} url The url to navigate to.\n         */\n        this.navigateParentTo = function(url) {\n            this.sendMessage('navigateTo', url);\n        };\n\n        /**\n         * Scroll parent to a given child element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildEl\n         * @instance\n         *\n         * @param {String} id The id of the child element to scroll to.\n         */\n        this.scrollParentToChildEl = function(id) {\n            // Get the child element position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var topPos = document.getElementById(id).getBoundingClientRect().top + window.pageYOffset;\n            this.scrollParentToChildPos(topPos);\n        };\n\n        /**\n         * Scroll parent to a particular child offset.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildPos\n         * @instance\n         *\n         * @param {Number} pos The offset of the child element to scroll to.\n         */\n        this.scrollParentToChildPos = function(pos) {\n            this.sendMessage('scrollToChildPos', pos.toString());\n        };\n\n        /**\n         * Mark Whether the child is embedded or not\n         * executes a callback in case it was passed to the config\n         *\n         * @memberof module:pym.Child\n         * @method _markWhetherEmbedded\n         * @inner\n         *\n         * @param {module:pym.Child~onMarkedEmbeddedStatus} The callback to execute after determining whether embedded or not.\n         */\n        var _markWhetherEmbedded = function(onMarkedEmbeddedStatus) {\n          var htmlElement = document.getElementsByTagName('html')[0],\n              newClassForHtml,\n              originalHtmlClasses = htmlElement.className;\n          try {\n            if(window.self !== window.top) {\n              newClassForHtml = \"embedded\";\n            }else{\n              newClassForHtml = \"not-embedded\";\n            }\n          }catch(e) {\n            newClassForHtml = \"embedded\";\n          }\n          if(originalHtmlClasses.indexOf(newClassForHtml) < 0) {\n            htmlElement.className = originalHtmlClasses ? originalHtmlClasses + ' ' + newClassForHtml : newClassForHtml;\n            if(onMarkedEmbeddedStatus){\n              onMarkedEmbeddedStatus(newClassForHtml);\n            }\n            _raiseCustomEvent(\"marked-embedded\");\n          }\n        };\n\n        /**\n         * @callback module:pym.Child~onMarkedEmbeddedStatus\n         * @param {String} classname \"embedded\" or \"not-embedded\".\n         */\n\n        /**\n         * Unbind child event handlers and timers.\n         *\n         * @memberof module:pym.Child\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            if (this.timerId) {\n                clearInterval(this.timerId);\n            }\n        };\n\n        // Initialize settings with overrides.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Identify what ID the parent knows this child as.\n        this.id = _getParameterByName('childId') || config.id;\n        this.messageRegex = new RegExp('^pym' + MESSAGE_DELIMITER + this.id + MESSAGE_DELIMITER + '(\\\\S+)' + MESSAGE_DELIMITER + '(.*)$');\n\n        // Get the initial width from a URL parameter.\n        var width = parseInt(_getParameterByName('initialWidth'));\n\n        // Get the url of the parent frame\n        this.parentUrl = _getParameterByName(this.settings.parenturlparam);\n\n        // Get the title of the parent frame\n        this.parentTitle = _getParameterByName('parentTitle');\n\n        // Bind the required message handlers\n        this.onMessage('width', this._onWidthMessage);\n\n        // Set up a listener to handle any incoming messages.\n        window.addEventListener('message', this._processMessage, false);\n\n        // If there's a callback function, call it.\n        if (this.settings.renderCallback) {\n            this.settings.renderCallback(width);\n        }\n\n        // Send the initial height to the parent.\n        this.sendHeight();\n\n        // If we're configured to poll, create a setInterval to handle that.\n        if (this.settings.polling) {\n            this.timerId = window.setInterval(this.sendHeight, this.settings.polling);\n        }\n\n        _markWhetherEmbedded(config.onMarkedEmbeddedStatus);\n\n        return this;\n    };\n\n    // Initialize elements with pym data attributes\n    // if we are not in server configuration\n    if(typeof document !== \"undefined\") {\n        lib.autoInit(true);\n    }\n\n    return lib;\n});\n\n","export const urls = {\n\tlocal: \"http://localhost:5000/#/\",\n\tbase: \"https://bothness.github.io/embed-profile/#/\",\n\tplaces: 'https://raw.githubusercontent.com/ONSvisual/census-data/main/csv/lists/places_2020.csv'\n};\n\nexport const items = {\n\tpopulation: {\n\t\tlabel: 'Population'\n\t},\n\tdensity: {\n\t\tlabel: 'Density'\n\t},\n\tsex: {\n\t\tlabel: 'Sex'\n\t},\n\thealth: {\n\t\tlabel: 'General health'\n\t},\n\tethnicity: {\n\t\tlabel: 'Ethnicity'\n\t},\n\tagemed: {\n\t\tlabel: 'Median age'\n\t},\n\tage10yr: {\n\t\tlabel: 'Age profile'\n\t},\n\teconomic:\n\t{\n\t\tlabel: 'Economic activity'\n\t},\n\ttravel: {\n\t\tlabel: 'Travel to work'\n\t},\n\ttenure: {\n\t\tlabel: 'Housing tenure'\n\t}\n};\n\nexport const types = {\n\tew: {name: '', pl: ''},\n\twd: {name: 'Ward', pl: 'Wards'},\n\tlad: {name: 'District', pl: 'Districts'},\n\trgn: {name: 'Region', pl: 'Regions'},\n\tctry: {name: 'Country', pl: 'Countries'}\n};","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","<script>\n\timport { createEventDispatcher } from 'svelte';\n\t\n\tconst dispatch = createEventDispatcher();\n\t\n\texport let options;\n\texport let selected = null;\n\texport let placeholder = \"Find an area\";\n\texport let value = \"code\";\n\texport let label = \"name\";\n\texport let group = null;\n\texport let search = false;\n\t\n\tlet selectedPrev = selected;\n\tlet selectedItem = selected ? options.find(d => d[value] == selected) : null;\n\tlet expanded = false;\n\tlet filter = '';\n\tlet active = null;\n\tlet filtered;\n\tlet el;\n\tlet input;\n\tlet items = [];\n\t\n\tfunction sleep(ms) {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\t\n\t$: regex = filter ? new RegExp(filter, 'i') : null;\n\t$: {\n\t\tfiltered = regex ? options.filter(option => regex.test(option[label])) : options;\n\t\tactive = 0;\n\t}\n\t\n\tfunction toggle(ev) {\n\t\tev.stopPropagation();\n\t\tfilter = '';\n\t\texpanded = !expanded;\n\t\tsleep(10).then(() => {\n\t\t\tif (input && expanded) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction select(option) {\n\t\tselected = option[value];\n\t\texpanded = false;\n\t\tdispatch('select', {\n\t\t\tselected: option,\n\t\t\tvalue: option[value]\n\t\t});\n\t}\n\t\n\tfunction unSelect(ev) {\n\t\tev.stopPropagation();\n\t\tselected = null;\n\t\tselectedPrev = null;\n\t\tselectedItem = null;\n\t\tdispatch('select', {\n\t\t\tselected: null,\n\t\t\tvalue: null\n\t\t});\n\t}\n\t\n\tfunction doKeydown(ev) {\n\t\tif (expanded && filtered[0] && Number.isInteger(active)) {\n\t\t\tif (ev.keyCode === 38) {\n\t\t\t\tactive -= active > 0 ? 1 : 0;\n\t\t\t\titems[active].scrollIntoView({ block: 'nearest', inline: 'start' });\n\t\t\t} else if (ev.keyCode === 40) {\n\t\t\t\tactive += active < filtered.length - 1 ? 1 : 0;\n\t\t\t\titems[active].scrollIntoView({ block: 'nearest', inline: 'end' });\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction doKeyup(ev) {\n\t\tif (filtered[0] && Number.isInteger(active)) {\n\t\t\tif (ev.keyCode === 13) {\n\t\t\t\tselect(filtered[active]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t$: document.onclick = function(e){\n\t\tif(e.target !== el){\n\t\t\texpanded = false;\n\t\t\tactive = 0;\n\t\t}\n\t};\n\t\n\t$: if (selectedPrev != selected) {\n\t\tselectedItem = options.find(d => d[value] == selected);\n\t\tselectedPrev = selected;\n\t}\n</script>\n\n<style>\n\t#select {\n\t\ttext-align: left;\n\t}\n\ta {\n\t\ttext-decoration: none;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tborder: 2px solid #206095 !important;\n\t}\n\ta span {\n\t\tdisplay: inline-block;\n\t\tpadding: 10px 5px;\n\t}\n\t.selection {\n\t\toverflow: hidden;\n\t\tmax-width: calc(100% - 50px);\n    white-space: nowrap;\n\t}\n\t#dropdown ul {\n\t\tlist-style: none;\n\t\tbackground: #eee;\n\t\tmargin: 0;\n\t\tmargin-top: 3px;\n\t\tpadding: 0;\n\t\tmax-height: 170px;\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t}\n\t#dropdown li {\n\t\tline-height: 1em;\n\t\tpadding: 6px;\n\t}\n\t#dropdown .highlight {\n\t\tcolor: #fff;\n\t\tbackground-color: #206095;\n\t\tfont-weight: 500;\n\t\tcursor: pointer;\n\t}\n\t/* normalize the input elements, make them look like everything else */\n\t#select input {\n\t\twidth: calc(100% - 40px);\n\t\tbox-sizing: border-box;\n\t\tbackground: transparent;\n\t\tfont-family: inherit;\n\t\tfont-size: inherit;\n\t\tcolor: inherit;\n\t\tfont-weight: inherit;\n\t\tline-height: inherit;\n\t\tdisplay: inline-block;\n\t\tpadding: 10px 5px;\n\t\tmargin: 0;\n\t\tbackground-color: #fff;\n\t\tborder: 2px solid #206095 !important;\n\t\tborder-radius: 0px;\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t}\n\t#select input:focus {\n\t\toutline: none;\n\t}\n\t/* custom field (drop-down, text element) styling  */\n\t#select {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\tposition: relative;\n\t}\n\t.active {\n\t\tz-index: 1000;\n\t\toutline: 3px solid orange;\n\t}\n\t/* the toggle is the visible part in the form */\n\t#toggle,\n\t#select input {\n\t\tline-height: inherit;\n\t\tcolor: #206095;\n\t\tfont-weight: 500;\n\t\tcursor: pointer;\n\t}\n\t#toggle {\n\t\tdisplay: flex;\n\t}\n\t/* drop-down list / text element */\n\t#dropdown {\n\t\twidth: 100%;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\topacity: 1;\n\t}\n\t.selected {\n\t\tcolor: #fff !important;\n\t\tbackground-color: #206095;\n\t}\n\t.button {\n\t\tcolor: #fff;\n\t\tbackground-color: #206095;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: center;\n\t\tdisplay: inline-block;\n\t\tmargin-left: auto;\n\t}\n\t.down {\n\t\tbackground-image: url(\"https://bothness.github.io/geo-draw/img/chevron-down.svg\");\n\t\twidth: 30px;\n\t}\n\t.search {\n\t\tbackground-image: url(\"https://bothness.github.io/geo-draw/img/search.svg\");\n\t\twidth: 30px;\n\t}\n\t.close {\n\t\tbackground-image: url(\"https://bothness.github.io/geo-draw/img/x-close.svg\");\n\t\twidth: 30px;\n\t}\n\tsmall {\n\t\tmargin-left: 3px;\n\t}\n\t#toggle small {\n\t\tcolor: lightgrey;\n\t}\n\t#dropdown small {\n\t\tcolor: grey;\n\t}\n</style>\n\n<div id=\"select\" class:active={expanded} on:keydown={doKeydown}>\n\t{#if selectedItem && !search}\n\t<a id=\"toggle\" class=\"selected\" on:click={toggle}>\n\t\t<span class=\"selection\">{selectedItem[label]} {#if group}<small>{selectedItem[group]}</small>{/if}</span>\n\t\t<span class=\"button close\" on:click={unSelect}>&nbsp;</span>\n\t</a>\n\t{:else}\n\t<a id=\"toggle\" on:click={toggle}>\n\t\t<span>{placeholder ? placeholder : 'Select one'}</span>\n\t\t<span class=\"button\" class:search class:down={!search}>&nbsp;</span>\n\t</a>\n\t{/if}\n\t{#if expanded}\n\t<div id=\"dropdown\" bind:this={el} style=\"top: 0;\">\n\t\t<input type=\"text\" placeholder=\"\" bind:value={filter} autocomplete=\"false\" bind:this={input} on:keyup={doKeyup} />\n\t\t<ul>\n\t\t\t{#if filter.length < 3}\n\t\t\t<li>Type a name...</li>\n\t\t\t{:else if filtered[0] && group}\n\t\t\t{#each filtered as option, i}\n\t\t\t<li class:highlight=\"{active == i}\" on:click=\"{() => select(option)}\" on:mouseover=\"{() => active = i}\" bind:this=\"{items[i]}\">\n\t\t\t\t{option[label]} <small>{option[group]}</small>\n\t\t\t</li>\n\t\t\t{/each}\n\t\t\t{:else if filtered[0]}\n\t\t\t{#each filtered as option, i}\n\t\t\t<li class:highlight=\"{active == i}\" on:click=\"{() => select(option)}\" on:mouseover=\"{() => active = i}\" bind:this=\"{items[i]}\">\n\t\t\t\t{option[label]}\n\t\t\t</li>\n\t\t\t{/each}\n\t\t\t{:else}\n\t\t\t<li>No results</li>\n\t\t\t{/if}\n\t\t</ul>\n\t</div>\n\t{/if}\n</div>","<script>\n  export let id = \"switch\";\n  export let mono = false;\n  export let checked;\n</script>\n\n<div class=\"switch\">\n  <input bind:checked {id} type=\"checkbox\" class=\"switch-input\" tabindex=\"0\" />\n  <label for={id} class=\"switch-label\" class:mono><slot/></label>\n</div>\n\n<style>\n  .switch {\n    position: relative;\n    display: block;\n  }\n  :global(.switch + .switch) {\n    margin-top: 5px;\n  }\n  .switch-input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  .switch-label::before,\n  .switch-label::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    cursor: pointer;\n  }\n  .switch-label {\n    display: block;\n    cursor: pointer;\n    margin-left: 54px;\n  }\n  .switch-label::before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 48px;\n    height: 24px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-color: #aaa;\n    border-radius: 9999em;\n    -webkit-transition: background-color 0.25s ease;\n    -o-transition: background-color 0.25s ease;\n    transition: background-color 0.25s ease;\n  }\n  .switch-label::after {\n    top: 3px;\n    left: 3px;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background-color: #fff;\n    -webkit-transition: left 0.25s ease;\n    -o-transition: left 0.25s ease;\n    transition: left 0.25s ease;\n  }\n  .switch-input:checked + .switch-label::before {\n    background-color: rgb(32, 96, 149);\n  }\n  .switch-input:checked + .switch-label::after {\n    left: 27px;\n    top: 3px;\n  }\n\n  .mono::before {\n    border: 2px solid white;\n    background: none !important;\n  }\n</style>","<script>\n\timport pym from \"pym.js\";\n\timport { items, urls, types } from \"./config\";\n\timport { getData } from \"./utils\";\n\timport Select from \"./Select.svelte\";\n\timport Toggle from \"./Toggle.svelte\";\n\n\tlet pymParent;\n\tlet pymDiv;\n\tlet pymReady = false;\n\n\tlet options = Object.keys(items);\n\tlet places;\n\tlet embed = false;\n\n\tlet selected = [\"population\", \"agemed\", \"age10yr\"];\n\tlet code = \"E07000087\";\n\tlet selector = false;\n\tlet change = false;\n\n\tfunction switchItem(key) {\n\t\tif (selected.includes(key)) {\n\t\t\tselected = selected.filter((d) => d != key);\n\t\t} else {\n\t\t\tselected = [...selected, key];\n\t\t}\n\t}\n\n\tfunction moveItem(key, int) {\n\t\tlet index = selected.indexOf(key);\n\t\tlet newindex = index + int;\n\t\tif (newindex >= 0 && newindex <= selected.length - 1) {\n\t\t\tlet newselected = selected.filter((d) => d != key);\n\t\t\tnewselected.splice(newindex, 0, key);\n\t\t\tselected = newselected;\n\t\t}\n\t}\n\n\tfunction makePym() {\n\t\tpymParent = new pym.Parent(\"profile\", url, { name: \"profile\", id: \"iframe\" });\n\t\tpymReady = true;\n\t}\n\n\tfunction makePNG() {\n\t\tpymParent.sendMessage('makePNG', null);\n\t}\n\n\tgetData(urls.places).then((res) => {\n\t\tlet lookup = {};\n\t\tres.forEach((d) => lookup[d.code] = d.name);\n\t\tres.forEach((d) => {\n\t\t\td.typestr = d.parent != '' ? `${types[d.type].name} in ${lookup[d.parent]}` : '';\n\t\t});\n\t\tplaces = res.sort((a, b) => a.name.localeCompare(b.name));\n\t});\n\n\t$: url = `${urls.base}${code ? code : \"\"}/${selector ? \"select\" : \"\"}/${change ? \"change\" : \"\"}/${selected.join(\",\")}`;\n\n\t$: !pymReady && pymDiv && url && makePym();\n\t$: pymReady && url && window.open(url, \"profile\");\n</script>\n\n<header>\n\t<div class=\"col-wide\">\n\t\t<h1>Build an area profile</h1>\n\t</div>\n</header>\n\n<section>\n\t<div class=\"col-wide\">\n\t\t<h3>Choose your area</h3>\n\t\t{#if places}\n\t\t\t<Select options={places} bind:selected={code} group=\"typestr\" />\n\t\t{/if}\n\t</div>\n</section>\n\t\n<section>\n\t<div class=\"col-wide\">\n\t\t<h3>Select topics</h3>\n\t\t<div id=\"options\">\n\t\t\t{#each options as key}\n\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"btn\"\n\t\t\t\t\t\tclass:btn-active={selected.includes(key)}\n\t\t\t\t\t\tprevent\n\t\t\t\t\t\ton:click={() => switchItem(key)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{items[key].label}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n</section>\n\n<section>\n\t<div class=\"col-wide\">\n\t\t<h3>Chosen topics</h3>\n\t\t<div id=\"selected\">\n\t\t\t{#if selected[0]}\n\t\t\t\t{#each selected as key}\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t<button class=\"btn btn-active\" on:click={() => moveItem(key, -1)}>\n\t\t\t\t\t\t\t&lt;\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-active\">\n\t\t\t\t\t\t\t{items[key].label}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-active\" on:click={() => switchItem(key)}>\n\t\t\t\t\t\t\t&times;\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-active\" on:click={() => moveItem(key, 1)}>\n\t\t\t\t\t\t\t&gt;\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t{:else}\n\t\t\t\t<span class=\"muted\">No components selected</span>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n</section>\n\n<section>\n\t<div class=\"col-wide\">\n\t\t<Toggle bind:checked={change} id=\"change\">Include change over time toggle</Toggle>\n\t\t<Toggle bind:checked={selector} id=\"selector\">Allow selection of other areas</Toggle>\n\t</div>\n</section>\n\n<section>\n\t<div id=\"profile\" bind:this={pymDiv} class=\"col-wide\" />\n</section>\n\n<section>\n\t<div class=\"col-wide\">\n\t\t<button class=\"btn\" class:btn-active={!embed} on:click={() => embed = !embed}>{embed ? 'Hide' : 'Show'} embed code</button>\n\t\t<button class=\"btn btn-active\" on:click={makePNG}>Download PNG</button>\n\t\t{#if embed}\n\t\t<div id=\"code\">\n\t\t\t<code>\n\t\t\t\t{`<div id=\"profile\"></div><script src=\"http://cdn.ons.gov.uk/vendor/pym/1.3.2/pym.min.js\"></script><script>var pymParent = new pym.Parent(\"profile\", \"${url}\", {name: \"profile\"});</script>`}\n\t\t\t</code>\n\t\t</div>\n\t\t{/if}\n\t</div>\n</section>\n\n<style>\n\th3 {\n\t\tmargin-top: 0;\n\t\tmargin-bottom: 5px;\n\t}\n\tsection {\n\t\tmargin-bottom: 20px;\n\t}\n\t.btn {\n\t\tpadding: 2px 4px;\n\t\tmargin: 0;\n\t\tborder: 2px solid #206095;\n\t\tborder-radius: 0;\n\t\tcursor: pointer;\n\t\tcolor: #206095;\n\t\tbackground-color: lightgrey;\n\t}\n\t.btn-active {\n\t\tcolor: white;\n\t\tbackground-color: #206095;\n\t}\n\t#options,\n\t#selected {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tflex-direction: row;\n\t}\n\t#selected,\n\t#code {\n\t\tborder: 2px solid grey;\n\t\tborder-radius: 3px;\n\t\tpadding: 5px;\n\t\tmargin-top: 5px;\n\t}\n\t#selected {\n\t\tpadding-bottom: 0;\n\t}\n\t#code {\n\t\tpadding-top: 2px;\n\t}\n\t.btn-group {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tmargin-right: 5px;\n\t\tmargin-bottom: 5px;\n\t}\n\t.btn-group > button {\n\t\tdisplay: inline;\n\t}\n\t.muted {\n\t\tcolor: grey;\n\t\tmargin-bottom: 5px;\n\t}\n</style>\n","import { csvParse, autoType } from 'd3-dsv';\n\nexport async function getData(url) {\n  let response = await fetch(url);\n  let string = await response.text();\n\tlet data = await csvParse(string, autoType);\n  return data;\n}","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","current_component","is_hydrating","upper_bound","low","high","key","value","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","longest","seqLen","idx","claim_order","newLen","lis","toMove","last","cur","push","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","bind","index","props","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","l","intro","SvelteComponent","$destroy","this","$on","indexOf","splice","$set","$$props","obj","$$set","keys","factory","module","exports","window","pym","MESSAGE_DELIMITER","lib","_raiseCustomEvent","eventName","initEvent","dispatchEvent","_getParameterByName","results","RegExp","replace","exec","location","search","decodeURIComponent","_isSafeMessage","settings","xdomain","origin","match","_makeMessage","id","messageType","message","join","_getNow","Date","now","getTime","_cleanAutoInitInstances","autoInitInstances","el","getElementsByTagName","contentWindow","autoInit","doNotRaiseEvents","elements","querySelectorAll","random","toString","substr","title","sandbox","allowfullscreen","parenturlparam","parenturlvalue","optionalparams","trackscroll","scrollwait","config","n","Number","isNaN","console","err","parent","Parent","url","getElementById","iframe","href","messageRegex","_makeMessageRegex","messageHandlers","_constructIframe","width","offsetWidth","hash","hashIndex","substring","encodeURIComponent","_onResize","_throttleOnScroll","sendWidth","sendViewportAndIFramePosition","_onScroll","_fire","remove","_processMessage","_onHeightMessage","height","parseInt","_onNavigateToMessage","_isSafeUrl","_onScrollToChildPosMessage","totalOffset","getBoundingClientRect","top","pageYOffset","scrollTo","onMessage","sendMessage","postMessage","iframeRect","payload","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","bottom","right","func","wait","args","result","timeout","previous","later","leading","apply","remaining","arguments","clearTimeout","trailing","setTimeout","_throttle","Child","parentWidth","parentTitle","parentUrl","renderCallback","polling","timerId","_onWidthMessage","sendHeight","offsetHeight","getParentPositionInfo","scrollParentTo","navigateParentTo","scrollParentToChildEl","topPos","scrollParentToChildPos","pos","clearInterval","setInterval","onMarkedEmbeddedStatus","newClassForHtml","htmlElement","originalHtmlClasses","className","self","_markWhetherEmbedded","urls","items","population","label","density","sex","health","ethnicity","agemed","age10yr","economic","travel","tenure","types","ew","pl","wd","lad","rgn","ctry","EOL","EOF","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","row","column","pad","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","csvParse","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","t","N","I","eof","eol","token","preformatBody","formatValue","formatRow","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","dsv","autoType","number","trim","NaN","fixtz","getHours","important","style","setProperty","dispatch","filtered","selected","placeholder","group","selectedPrev","selectedItem","find","expanded","active","select","option","regex","onclick","ev","ms","stopPropagation","focus","isInteger","keyCode","scrollIntoView","inline","slot_ctx","mono","checked","includes","r","pymParent","pymDiv","places","pymReady","embed","code","selector","change","switchItem","moveItem","int","newindex","newselected","async","response","fetch","string","getData","res","lookup","typestr","localeCompare","open","body"],"mappings":"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"}